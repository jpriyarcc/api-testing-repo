{"name": "test_login_gym_user", "status": "failed", "statusDetails": {"message": "Failed: Gym login fixture setup failed: 'login_gym_user'", "trace": "api = <tests.utils.api_helper1.ManagementUserAPIHandler object at 0x000002ED13478400>\ntest_data = {'assign_gym_user_role': [{'expected_status': 201, 'role_id': '123e4567-e89b-12d3-a456-426614174001', 'user_id': '123e...ssword': 'SecurePass123'}}, {'expected_status': 422, 'user_data': {'email': 'invalidemail', 'password': 'pass'}}], ...}\n\n    @pytest.fixture(scope=\"session\")\n    def gym_auth_tokens(api, test_data):\n        \"\"\"\n        Fixture to log in as an existing gym user once per test session,\n        returning gym access and refresh tokens.\n        \"\"\"\n        try:\n>           login_data = test_data[\"login_gym_user\"][0]\nE           KeyError: 'login_gym_user'\n\nconftest.py:98: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <tests.utils.api_helper1.ManagementUserAPIHandler object at 0x000002ED13478400>\ntest_data = {'assign_gym_user_role': [{'expected_status': 201, 'role_id': '123e4567-e89b-12d3-a456-426614174001', 'user_id': '123e...ssword': 'SecurePass123'}}, {'expected_status': 422, 'user_data': {'email': 'invalidemail', 'password': 'pass'}}], ...}\n\n    @pytest.fixture(scope=\"session\")\n    def gym_auth_tokens(api, test_data):\n        \"\"\"\n        Fixture to log in as an existing gym user once per test session,\n        returning gym access and refresh tokens.\n        \"\"\"\n        try:\n            login_data = test_data[\"login_gym_user\"][0]\n            response = api.login_gym_user(email=login_data[\"email\"], password=login_data[\"password\"])\n            assert \"data\" in response, \"Login response missing 'data' key\"\n    \n            access_token = response[\"data\"][\"access_token\"]\n            refresh_token = response[\"data\"][\"refresh_token\"]\n    \n            assert access_token, \"Gym access token missing\"\n            assert refresh_token, \"Gym refresh token missing\"\n    \n            return {\n                \"access_token\": access_token,\n                \"refresh_token\": refresh_token\n            }\n    \n        except Exception as e:\n            log.error(f\"Gym login fixture setup failed: {e}\")\n>           pytest.fail(f\"Gym login fixture setup failed: {e}\")\nE           Failed: Gym login fixture setup failed: 'login_gym_user'\n\nconftest.py:115: Failed"}, "description": "Test gym user login and validate received tokens.", "attachments": [{"name": "log", "source": "9cdb4649-b60a-4b9f-a6e5-1ae953165077-attachment.txt", "type": "text/plain"}], "start": 1754396258266, "stop": 1754396258266, "uuid": "0573c92a-2d01-476d-974c-ace246fdf137", "historyId": "d3e9af4924d013c07e9b96a95da6602a", "testCaseId": "d3e9af4924d013c07e9b96a95da6602a", "fullName": "tests.test_gym_management.TestGymManagement#test_login_gym_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_gym_management"}, {"name": "subSuite", "value": "TestGymManagement"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "17068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_gym_management"}], "titlePath": ["tests", "test_gym_management.py", "TestGymManagement"]}
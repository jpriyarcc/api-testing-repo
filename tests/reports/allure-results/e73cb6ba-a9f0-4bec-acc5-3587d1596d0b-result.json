{"name": "test_login", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: http://localhost:8000/api/v1/management/auth/login", "trace": "self = <management_user.TestManagementUserAuth testMethod=test_login>\n\n    def test_login(self):\n        case = self.test_data[\"login\"][0]\n>       response = self.api.login(email=case[\"email\"], password=case[\"password\"])\n\nmanagement_user.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\api_helper1.py:133: in login\n    resp = self.post(endpoint, json={\"email\": email, \"password\": password})\n..\\utils\\api_client.py:72: in post\n    return self._handle_response(resp)\n..\\utils\\api_client.py:47: in _handle_response\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: http://localhost:8000/api/v1/management/auth/login\n\n..\\.venv\\lib\\site-packages\\requests\\models.py:1026: HTTPError"}, "attachments": [{"name": "log", "source": "00c1a021-4e15-410a-a1d7-196f3aefca34-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "0fe9f036-7974-4c90-8f30-30b099b77813-attachment.txt", "type": "text/plain"}], "start": 1754284547484, "stop": 1754284548087, "uuid": "bc893778-d78f-4bd5-8b2c-0c7e6cf8c833", "historyId": "722f5c69482a9125b59b4b2cbff5c00b", "testCaseId": "722f5c69482a9125b59b4b2cbff5c00b", "fullName": "tests.management_user.TestManagementUserAuth#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "management_user"}, {"name": "subSuite", "value": "TestManagementUserAuth"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "27716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.management_user"}], "titlePath": ["tests", "management_user.py", "TestManagementUserAuth"]}
{"name": "test_update_user_by_id", "status": "failed", "statusDetails": {"message": "Failed: assert None == 'Updated User'\n +  where None = <built-in method get of dict object at 0x000001BE5D44D1C0>('full_name')\n +    where <built-in method get of dict object at 0x000001BE5D44D1C0> = {'email': 'user8@example.com', 'first_name': 'John', 'last_name': 'Doe', 'phone_number': '+1234567890', 'date_of_birth': '1990-01-01T00:00:00Z', 'street_address': '123 Main St', 'city': 'New York', 'state': 'NY', 'zip_code': '10001', 'country': 'USA', 'id': '33b84d58-cd67-4acd-84da-197305337c05', 'is_active': True, 'created_at': '2025-08-05T09:33:53.025105Z', 'updated_at': '2025-08-05T09:34:21.619239Z', 'roles': []}.get", "trace": "self = <test_management_user.TestManagementUserAuth object at 0x000001BE5D48FBB0>\napi = <utils.api_helper1.ManagementUserAPIHandler object at 0x000001BE5D442BF0>\nsetup_user = <module 'tests.shared_data' from 'C:\\\\Users\\\\jothi\\\\Documents\\\\api-testing-repo\\\\tests\\\\shared_data.py'>\n\n    def test_update_user_by_id(self, api, setup_user):\n        \"\"\"Test updating a user's profile details by user ID.\"\"\"\n        try:\n            update_payload = {\"full_name\": \"Updated User\"}\n            user_id = setup_user.user_id\n            token = setup_user.access_token\n    \n            response = api.update_user_by_id(\n                user_id=user_id,\n                token=token,\n                update_payload=update_payload\n            )\n            assert \"data\" in response\n    \n            # Debug print to inspect actual response keys\n            print(\"Update response data:\", response[\"data\"])\n    \n            # Adjust this assert after inspecting the response keys\n>           assert response[\"data\"].get(\"full_name\") == update_payload[\"full_name\"]\nE           AssertionError: assert None == 'Updated User'\nE            +  where None = <built-in method get of dict object at 0x000001BE5D44D1C0>('full_name')\nE            +    where <built-in method get of dict object at 0x000001BE5D44D1C0> = {'email': 'user8@example.com', 'first_name': 'John', 'last_name': 'Doe', 'phone_number': '+1234567890', 'date_of_birth': '1990-01-01T00:00:00Z', 'street_address': '123 Main St', 'city': 'New York', 'state': 'NY', 'zip_code': '10001', 'country': 'USA', 'id': '33b84d58-cd67-4acd-84da-197305337c05', 'is_active': True, 'created_at': '2025-08-05T09:33:53.025105Z', 'updated_at': '2025-08-05T09:34:21.619239Z', 'roles': []}.get\n\ntest_management_user.py:201: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_management_user.TestManagementUserAuth object at 0x000001BE5D48FBB0>\napi = <utils.api_helper1.ManagementUserAPIHandler object at 0x000001BE5D442BF0>\nsetup_user = <module 'tests.shared_data' from 'C:\\\\Users\\\\jothi\\\\Documents\\\\api-testing-repo\\\\tests\\\\shared_data.py'>\n\n    def test_update_user_by_id(self, api, setup_user):\n        \"\"\"Test updating a user's profile details by user ID.\"\"\"\n        try:\n            update_payload = {\"full_name\": \"Updated User\"}\n            user_id = setup_user.user_id\n            token = setup_user.access_token\n    \n            response = api.update_user_by_id(\n                user_id=user_id,\n                token=token,\n                update_payload=update_payload\n            )\n            assert \"data\" in response\n    \n            # Debug print to inspect actual response keys\n            print(\"Update response data:\", response[\"data\"])\n    \n            # Adjust this assert after inspecting the response keys\n            assert response[\"data\"].get(\"full_name\") == update_payload[\"full_name\"]\n        except Exception as e:\n            log.error(f\"Update user test failed: {e}\")\n>           pytest.fail(str(e))\nE           Failed: assert None == 'Updated User'\nE            +  where None = <built-in method get of dict object at 0x000001BE5D44D1C0>('full_name')\nE            +    where <built-in method get of dict object at 0x000001BE5D44D1C0> = {'email': 'user8@example.com', 'first_name': 'John', 'last_name': 'Doe', 'phone_number': '+1234567890', 'date_of_birth': '1990-01-01T00:00:00Z', 'street_address': '123 Main St', 'city': 'New York', 'state': 'NY', 'zip_code': '10001', 'country': 'USA', 'id': '33b84d58-cd67-4acd-84da-197305337c05', 'is_active': True, 'created_at': '2025-08-05T09:33:53.025105Z', 'updated_at': '2025-08-05T09:34:21.619239Z', 'roles': []}.get\n\ntest_management_user.py:204: Failed"}, "description": "Test updating a user's profile details by user ID.", "attachments": [{"name": "log", "source": "1d7e45a2-19fe-4f80-9a49-35aac23eab88-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9498cd4d-1626-45ff-9ff2-08be3128832f-attachment.txt", "type": "text/plain"}], "start": 1754388206384, "stop": 1754388206580, "uuid": "fac3b0b8-141c-4023-b24b-90ba5b37e157", "historyId": "0e60270e0e358ea86b1fe1ccc85ea275", "testCaseId": "0e60270e0e358ea86b1fe1ccc85ea275", "fullName": "tests.test_management_user.TestManagementUserAuth#test_update_user_by_id", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_management_user"}, {"name": "subSuite", "value": "TestManagementUserAuth"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "10396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_management_user"}], "titlePath": ["tests", "test_management_user.py", "TestManagementUserAuth"]}
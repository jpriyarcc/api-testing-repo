{"name": "test_forgot_password", "status": "failed", "statusDetails": {"message": "Failed: 404 Client Error: Not Found for url: http://localhost:8000/api/v1/management/auth/forgot-password", "trace": "self = <test_management_user.TestManagementUserAuth object at 0x000001B0EDB83490>\napi = <utils.api_helper1.ManagementUserAPIHandler object at 0x000001B0ED2FD390>\ntest_data = {'assign_gym_user_role': [{'expected_status': 201, 'role_id': '123e4567-e89b-12d3-a456-426614174001', 'user_id': '123e...ssword': 'SecurePass123'}}, {'expected_status': 422, 'user_data': {'email': 'invalidemail', 'password': 'pass'}}], ...}\n\n    def test_forgot_password(self, api, test_data):\n        \"\"\"Test initiating forgot password flow (sending reset link).\"\"\"\n        try:\n            case = test_data[\"forgot_password\"][0]\n>           response = api.forgot_password(email=case[\"email\"])\n\ntest_management_user.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\api_helper1.py:93: in forgot_password\n    resp = self.post(endpoint, json={\"email\": email})\n..\\utils\\api_client.py:72: in post\n    self._handle_response(resp)\n..\\utils\\api_client.py:47: in _handle_response\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http://localhost:8000/api/v1/management/auth/forgot-password\n\n..\\.venv\\lib\\site-packages\\requests\\models.py:1026: HTTPError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_management_user.TestManagementUserAuth object at 0x000001B0EDB83490>\napi = <utils.api_helper1.ManagementUserAPIHandler object at 0x000001B0ED2FD390>\ntest_data = {'assign_gym_user_role': [{'expected_status': 201, 'role_id': '123e4567-e89b-12d3-a456-426614174001', 'user_id': '123e...ssword': 'SecurePass123'}}, {'expected_status': 422, 'user_data': {'email': 'invalidemail', 'password': 'pass'}}], ...}\n\n    def test_forgot_password(self, api, test_data):\n        \"\"\"Test initiating forgot password flow (sending reset link).\"\"\"\n        try:\n            case = test_data[\"forgot_password\"][0]\n            response = api.forgot_password(email=case[\"email\"])\n    \n            assert response.status_code == case[\"expected_status\"], (\n                f\"Expected status {case['expected_status']}, got {response.status_code}\"\n            )\n            response_json = response.json()\n            assert case[\"expected_key\"] in response_json, (\n                f\"'{case['expected_key']}' not found in response\"\n            )\n            assert response_json[case[\"expected_key\"]] == case[\"expected_value\"], (\n                f\"Expected {case['expected_key']} = {case['expected_value']}, \"\n                f\"got {response_json.get(case['expected_key'])}\"\n            )\n    \n        except Exception as e:\n            log.error(f\"Forgot password test failed: {e}\")\n>           pytest.fail(str(e))\nE           Failed: 404 Client Error: Not Found for url: http://localhost:8000/api/v1/management/auth/forgot-password\n\ntest_management_user.py:106: Failed"}, "description": "Test initiating forgot password flow (sending reset link).", "attachments": [{"name": "log", "source": "1df5bdfb-29ac-406d-8047-2036a71d4dec-attachment.txt", "type": "text/plain"}], "start": 1754383817253, "stop": 1754383818530, "uuid": "f8acd08c-0d73-4b2b-8ad2-a552092bc5a2", "historyId": "51e818076a900e7683e4b3e559ffd910", "testCaseId": "51e818076a900e7683e4b3e559ffd910", "fullName": "tests.test_management_user.TestManagementUserAuth#test_forgot_password", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_management_user"}, {"name": "subSuite", "value": "TestManagementUserAuth"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "29612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_management_user"}], "titlePath": ["tests", "test_management_user.py", "TestManagementUserAuth"]}
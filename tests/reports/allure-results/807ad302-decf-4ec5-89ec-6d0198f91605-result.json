{"name": "test_update_user_by_id", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: http://localhost:8000/api/v1/management/user/None", "trace": "self = <management_user.TestManagementUserAuth testMethod=test_update_user_by_id>\n\n    def test_update_user_by_id(self):\n        update_payload = {\"full_name\": \"Updated User\"}\n>       response = self.api.update_user_by_id(\n            user_id=self.user_id,\n            token=self.access_token,\n            update_payload=update_payload\n        )\n\nmanagement_user.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\api_helper1.py:232: in update_user_by_id\n    resp = self.put(endpoint, json=update_payload, token=token)\n..\\utils\\api_client.py:104: in put\n    return self._handle_response(resp)\n..\\utils\\api_client.py:51: in _handle_response\n    response.raise_for_status()  # Raises HTTPError for bad status codes\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: http://localhost:8000/api/v1/management/user/None\n\n..\\.venv\\lib\\site-packages\\requests\\models.py:1026: HTTPError"}, "attachments": [{"name": "log", "source": "560cdec0-c030-4720-8300-6ecee89a0b20-attachment.txt", "type": "text/plain"}], "start": 1754044048896, "stop": 1754044048943, "uuid": "e493b81f-95b0-4924-84be-ebb87d36a180", "historyId": "d67f1f3ad0371ad488648f5fdd4efc0a", "testCaseId": "d67f1f3ad0371ad488648f5fdd4efc0a", "fullName": "tests.management_user.TestManagementUserAuth#test_update_user_by_id", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "management_user"}, {"name": "subSuite", "value": "TestManagementUserAuth"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "12092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.management_user"}], "titlePath": ["tests", "management_user.py", "TestManagementUserAuth"]}
{"name": "test_verify_email", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://localhost:8000/api/v1/management/auth/verify-email?token=mhFR0VZEja3iwMxgS0G4Jv4btQFRq5fMSVDDlS2QqPCwJ9wdFTszyaK-b9raGzr2M6FwRA9JKBWMMEvGe5xsvA", "trace": "self = <management_user.TestManagementUserAuth testMethod=test_verify_email>\n\n    def test_verify_email(self):\n        case = self.test_data[\"verify_email\"][0]\n>       response = self.api.verify_email(token=case[\"token\"])\n\nmanagement_user.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\api_helper1.py:54: in verify_email\n    return self.get(endpoint, params={\"token\": token})\n..\\utils\\api_client.py:86: in get\n    return self._handle_response(resp)\n..\\utils\\api_client.py:47: in _handle_response\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://localhost:8000/api/v1/management/auth/verify-email?token=mhFR0VZEja3iwMxgS0G4Jv4btQFRq5fMSVDDlS2QqPCwJ9wdFTszyaK-b9raGzr2M6FwRA9JKBWMMEvGe5xsvA\n\n..\\.venv\\lib\\site-packages\\requests\\models.py:1026: HTTPError"}, "attachments": [{"name": "log", "source": "51c7fe58-0d79-48e2-8e35-b546ffb3f0cc-attachment.txt", "type": "text/plain"}], "start": 1754050784211, "stop": 1754050784457, "uuid": "0e6e1dc0-088e-409e-838d-b46bffd432f7", "historyId": "5dcef521107a554b16339fd9d6c0f954", "testCaseId": "5dcef521107a554b16339fd9d6c0f954", "fullName": "tests.management_user.TestManagementUserAuth#test_verify_email", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "management_user"}, {"name": "subSuite", "value": "TestManagementUserAuth"}, {"name": "host", "value": "mirrajo"}, {"name": "thread", "value": "30212-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.management_user"}], "titlePath": ["tests", "management_user.py", "TestManagementUserAuth"]}